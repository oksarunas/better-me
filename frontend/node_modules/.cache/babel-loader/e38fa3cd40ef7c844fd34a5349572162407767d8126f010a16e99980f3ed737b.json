{"ast":null,"code":"var _jsxFileName = \"/home/sarunas/Desktop/better_me/frontend/src/components/HabitTracker/HabitTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './HabitTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitTracker = () => {\n  _s();\n  const [habits, setHabits] = useState([]); // Store fetched habits\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n\n  // Fetch habits on component mount\n  useEffect(() => {\n    const fetchHabits = async () => {\n      setLoading(true);\n      setError(null); // Reset error state before fetching\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/progress`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setHabits(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHabits();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habit-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), !loading && !error && habits.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: habits.map((habit, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"habit-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: habit.habit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), \" - \", habit.status ? 'Completed' : 'Pending']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No habits found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitTracker, \"4dy+JDsKuvMkNLy3YdLFnAiO2R4=\");\n_c = HabitTracker;\nexport default HabitTracker;\nvar _c;\n$RefreshReg$(_c, \"HabitTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HabitTracker","_s","habits","setHabits","loading","setLoading","error","setError","fetchHabits","response","fetch","process","env","REACT_APP_API_BASE_URL","ok","Error","statusText","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","habit","index","status","_c","$RefreshReg$"],"sources":["/home/sarunas/Desktop/better_me/frontend/src/components/HabitTracker/HabitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './HabitTracker.css';\n\nconst HabitTracker = () => {\n  const [habits, setHabits] = useState([]); // Store fetched habits\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [error, setError] = useState(null); // Track error state\n\n  // Fetch habits on component mount\n  useEffect(() => {\n    const fetchHabits = async () => {\n      setLoading(true);\n      setError(null); // Reset error state before fetching\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/progress`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.statusText}`);\n        }\n        const data = await response.json();\n        setHabits(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchHabits();\n  }, []);\n\n  return (\n    <div className=\"habit-tracker\">\n      <h2>My Habits</h2>\n\n      {/* Loading State */}\n      {loading && <p>Loading...</p>}\n\n      {/* Error State */}\n      {error && <p className=\"error-message\">Error: {error}</p>}\n\n      {/* Habits List */}\n      {!loading && !error && habits.length > 0 ? (\n        <ul>\n          {habits.map((habit, index) => (\n            <li key={index} className=\"habit-item\">\n              <strong>{habit.habit}</strong> - {habit.status ? 'Completed' : 'Pending'}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        !loading && !error && <p>No habits found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default HabitTracker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}